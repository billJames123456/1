{"remainingRequest":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue?vue&type=style&index=0&id=77453986&lang=css&","dependencies":[{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\css-loader\\dist\\cjs.js","mtime":1719542184443},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1719542175382},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\postcss-loader\\src\\index.js","mtime":1719542177299},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1719542174992}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJvZHkgewogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vYXNzZXRzL2xvZ28vYmFjay5wbmciKTsKfQoKLnRpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbWFyZ2luLWxlZnQ6IDEzMHB4OwogIG1hcmdpbi1ib3R0b206IDMwcHg7Cn0KCi5yZWdpc3RlciB7CiAgd2lkdGg6IDQ1MHB4OwogIGhlaWdodDogMjIwcHg7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogNDUlOwogIGxlZnQ6IDUwJTsKICBtYXJnaW4tdG9wOiAtMjUwcHg7CiAgbWFyZ2luLWxlZnQ6IC0yMTBweDsKfQo="},{"version":3,"sources":["register.vue"],"names":[],"mappings":";AA8RA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n\n  <div class=\"register\">\n    <div class=\"title\">\n      <h1>用户注册</h1>\n    </div>\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\n      <a-form-item v-bind=\"formItemLayout\">\n        <span slot=\"label\">\n          账号&nbsp;\n          <a-tooltip title=\"不得出现中文字符\">\n            <a-icon type=\"question-circle-o\" />\n          </a-tooltip>\n        </span>\n        <a-input v-decorator=\"[\n          'username',\n          {\n            rules: [{ required: true, message: '请输入您的用户名', whitespace: true }],\n          },\n        ]\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"账号密码\" has-feedback>\n        <a-input v-decorator=\"[\n          'password',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入账号密码!',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          },\n        ]\" type=\"password\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"确认密码\" has-feedback>\n        <a-input v-decorator=\"[\n          'confirm',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入账号密码!',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          },\n        ]\" type=\"password\" @blur=\"handleConfirmBlur\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"E-mail\">\n        <a-input v-decorator=\"[\n          'email',\n          {\n            rules: [\n              {\n                type: 'email',\n                message: '邮箱不合法!',\n              },\n              {\n                required: true,\n                message: '请输入你的邮箱!',\n              },\n            ],\n          },\n        ]\" size=\"large\" @change=\"codeChange\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"验证码\">\n        <a-input v-decorator=\"[\n          'codeNumber',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入你的验证码!',\n              },\n            ],\n          },\n        ]\" size=\"large\" style=\"width:50%;float:left;margin-right: 5%;\" :maxLength=\"10\" />\n        <a-button type=\"primary\" @click=\"sendCode()\" :disabled=\"codeState\">\n          {{ codetxt }}\n        </a-button>\n      </a-form-item>\n      <a-form-item v-bind=\"tailFormItemLayout\">\n        <a-checkbox v-decorator=\"['agreement', { valuePropName: 'checked' }]\">\n          我已经阅读\n          <a href=\"\">\n            本网站协议\n          </a>\n        </a-checkbox>\n      </a-form-item>\n      <a-form-item v-bind=\"tailFormItemLayout\">\n        <a-button type=\"primary\" html-type=\"submit\">\n          点击注册\n        </a-button>\n        <a-button @click=\"gotoLogin\" style=\"margin-left:100px\" type=\"primary\">\n          返回登录\n        </a-button>\n      </a-form-item>\n    </a-form>\n\n  </div>\n\n\n</template>\n<script>\n\n\nexport default {\n  data() {\n    return {\n      codeState: false,\n      codetxt: '获取验证码',\n      confirmDirty: false,\n      autoCompleteResult: [],\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      },\n      tailFormItemLayout: {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      },\n    };\n  },\n  beforeCreate() {\n    this.form = this.$form.createForm(this, { name: 'register' });\n  },\n\n  methods: {\n    codeChange() {\n      // let error = this.form.getFieldError('email');\n      // if (!error) {\n      //   this.codeState = false;\n      // }\n      // else {\n      //   this.codeState = true;\n\n      // }\n    },\n    sendCode() {\n      let email = this.form.getFieldValue('email');\n      let error = this.form.getFieldError('email');\n      if (email == undefined || email == \"\") {\n        this.form.validateFields(['email']);\n        return;\n      }\n      if (!error) {\n        this.codeState = false;\n      }\n      else {\n        return;\n      }\n      // 更换样式\n      const t = 60;\n      var i = t;\n      let timer = setInterval(() => {\n        this.codetxt = i + \"s后重新获取\";\n        if (i == t) {\n          this.codeState = true;\n        }\n        if (i == 0) {\n          this.codeState = false;\n          this.codetxt = '获取验证码';\n          clearInterval(timer);\n        }\n        i--;\n      }, 1000)\n      // 发送验证码请求\n      \n      let data = new FormData();\n      data.append('email', email);\n      var _this = this;\n      this.axios({\n        url: _this.$serveUrL + \"/code\",\n        method: \"post\",\n        data: data,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        crossDomain: true,\n      }).then(function (resp) {\n       resp;\n      })\n\n\n    },\n    gotoLogin() {\n      this.$router.go(-1);\n    },\n    handleSubmit(e) {\n      e.preventDefault();\n      this.form.validateFieldsAndScroll((err, values) => {\n        var _this = this;\n\n        if (err) {\n          this.$message({\n            type: 'warning',\n            message: '请填写完整信息!'\n          });\n        }\n        else {\n          this.axios({\n            url: _this.$serveUrL + \"/user/add\",\n            method: \"post\",\n            data: values,\n            transformRequest: [\n              function (data) {\n                let ret = ''\n                for (let it in data) {\n                  ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n                }\n                ret = ret.substring(0, ret.lastIndexOf('&'));\n                return ret\n              }\n            ],\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            crossDomain: true,\n          }).then(function (resp) {\n            if (resp.data.status == \"success\") {\n              _this.$message({\n                type: 'success',\n                message: '注册成功!'\n              });\n              _this.$router.push({ name: 'login' });\n            }\n            if (resp.data.status == \"codeError\") {\n              _this.$message({\n                type: 'fail',\n                message: '验证码错误!'\n              });\n            }\n            if (resp.data.status == \"exist\") {\n              _this.$message({\n                type: 'waring',\n                message: '账号名已存在!'\n              });\n            }\n          });\n        }\n      });\n    },\n    handleConfirmBlur(e) {\n      const value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    compareToFirstPassword(rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一致');\n      } else {\n        callback();\n      }\n    },\n    validateToNextPassword(rule, value, callback) {\n      console.log(value);\n      const form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    },\n\n  },\n};\n</script>\n<style >\nbody {\n  background-image: url(\"../assets/logo/back.png\");\n}\n\n.title {\n  text-align: center;\n  margin-left: 130px;\n  margin-bottom: 30px;\n}\n\n.register {\n  width: 450px;\n  height: 220px;\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  margin-top: -250px;\n  margin-left: -210px;\n}\n</style>"]}]}