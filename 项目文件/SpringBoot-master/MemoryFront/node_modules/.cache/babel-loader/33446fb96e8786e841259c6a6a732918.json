{"remainingRequest":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\register.vue","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\babel.config.js","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\.babelrc","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js","mtime":1719542186130},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1719542174992}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlU3RhdGU6IGZhbHNlLAogICAgICBjb2RldHh0OiAn6I635Y+W6aqM6K+B56CBJywKICAgICAgY29uZmlybURpcnR5OiBmYWxzZSwKICAgICAgYXV0b0NvbXBsZXRlUmVzdWx0OiBbXSwKICAgICAgZm9ybUl0ZW1MYXlvdXQ6IHsKICAgICAgICBsYWJlbENvbDogewogICAgICAgICAgeHM6IHsKICAgICAgICAgICAgc3BhbjogMjQKICAgICAgICAgIH0sCiAgICAgICAgICBzbTogewogICAgICAgICAgICBzcGFuOiA4CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB3cmFwcGVyQ29sOiB7CiAgICAgICAgICB4czogewogICAgICAgICAgICBzcGFuOiAyNAogICAgICAgICAgfSwKICAgICAgICAgIHNtOiB7CiAgICAgICAgICAgIHNwYW46IDE2CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LAogICAgICB0YWlsRm9ybUl0ZW1MYXlvdXQ6IHsKICAgICAgICB3cmFwcGVyQ29sOiB7CiAgICAgICAgICB4czogewogICAgICAgICAgICBzcGFuOiAyNCwKICAgICAgICAgICAgb2Zmc2V0OiAwCiAgICAgICAgICB9LAogICAgICAgICAgc206IHsKICAgICAgICAgICAgc3BhbjogMTYsCiAgICAgICAgICAgIG9mZnNldDogOAogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAoKICBiZWZvcmVDcmVhdGUoKSB7CiAgICB0aGlzLmZvcm0gPSB0aGlzLiRmb3JtLmNyZWF0ZUZvcm0odGhpcywgewogICAgICBuYW1lOiAncmVnaXN0ZXInCiAgICB9KTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBjb2RlQ2hhbmdlKCkgey8vIGxldCBlcnJvciA9IHRoaXMuZm9ybS5nZXRGaWVsZEVycm9yKCdlbWFpbCcpOwogICAgICAvLyBpZiAoIWVycm9yKSB7CiAgICAgIC8vICAgdGhpcy5jb2RlU3RhdGUgPSBmYWxzZTsKICAgICAgLy8gfQogICAgICAvLyBlbHNlIHsKICAgICAgLy8gICB0aGlzLmNvZGVTdGF0ZSA9IHRydWU7CiAgICAgIC8vIH0KICAgIH0sCgogICAgc2VuZENvZGUoKSB7CiAgICAgIGxldCBlbWFpbCA9IHRoaXMuZm9ybS5nZXRGaWVsZFZhbHVlKCdlbWFpbCcpOwogICAgICBsZXQgZXJyb3IgPSB0aGlzLmZvcm0uZ2V0RmllbGRFcnJvcignZW1haWwnKTsKCiAgICAgIGlmIChlbWFpbCA9PSB1bmRlZmluZWQgfHwgZW1haWwgPT0gIiIpIHsKICAgICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHMoWydlbWFpbCddKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICghZXJyb3IpIHsKICAgICAgICB0aGlzLmNvZGVTdGF0ZSA9IGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybjsKICAgICAgfSAvLyDmm7TmjaLmoLflvI8KCgogICAgICBjb25zdCB0ID0gNjA7CiAgICAgIHZhciBpID0gdDsKICAgICAgbGV0IHRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgIHRoaXMuY29kZXR4dCA9IGkgKyAic+WQjumHjeaWsOiOt+WPliI7CgogICAgICAgIGlmIChpID09IHQpIHsKICAgICAgICAgIHRoaXMuY29kZVN0YXRlID0gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIGlmIChpID09IDApIHsKICAgICAgICAgIHRoaXMuY29kZVN0YXRlID0gZmFsc2U7CiAgICAgICAgICB0aGlzLmNvZGV0eHQgPSAn6I635Y+W6aqM6K+B56CBJzsKICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpOwogICAgICAgIH0KCiAgICAgICAgaS0tOwogICAgICB9LCAxMDAwKTsgLy8g5Y+R6YCB6aqM6K+B56CB6K+35rGCCgogICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICBkYXRhLmFwcGVuZCgnZW1haWwnLCBlbWFpbCk7CgogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5heGlvcyh7CiAgICAgICAgdXJsOiBfdGhpcy4kc2VydmVVckwgKyAiL2NvZGUiLAogICAgICAgIG1ldGhvZDogInBvc3QiLAogICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCiAgICAgICAgfSwKICAgICAgICBjcm9zc0RvbWFpbjogdHJ1ZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgcmVzcDsKICAgICAgfSk7CiAgICB9LAoKICAgIGdvdG9Mb2dpbigpIHsKICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTsKICAgIH0sCgogICAgaGFuZGxlU3VibWl0KGUpIHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLmZvcm0udmFsaWRhdGVGaWVsZHNBbmRTY3JvbGwoKGVyciwgdmFsdWVzKSA9PiB7CiAgICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgICAgaWYgKGVycikgewogICAgICAgICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJywKICAgICAgICAgICAgbWVzc2FnZTogJ+ivt+Whq+WGmeWujOaVtOS/oeaBryEnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5heGlvcyh7CiAgICAgICAgICAgIHVybDogX3RoaXMuJHNlcnZlVXJMICsgIi91c2VyL2FkZCIsCiAgICAgICAgICAgIG1ldGhvZDogInBvc3QiLAogICAgICAgICAgICBkYXRhOiB2YWx1ZXMsCiAgICAgICAgICAgIHRyYW5zZm9ybVJlcXVlc3Q6IFtmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgIGxldCByZXQgPSAnJzsKCiAgICAgICAgICAgICAgZm9yIChsZXQgaXQgaW4gZGF0YSkgewogICAgICAgICAgICAgICAgcmV0ICs9IGVuY29kZVVSSUNvbXBvbmVudChpdCkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YVtpdF0pICsgJyYnOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0ID0gcmV0LnN1YnN0cmluZygwLCByZXQubGFzdEluZGV4T2YoJyYnKSk7CiAgICAgICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICAgICAgfV0sCiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY3Jvc3NEb21haW46IHRydWUKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3ApIHsKICAgICAgICAgICAgaWYgKHJlc3AuZGF0YS5zdGF0dXMgPT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ+azqOWGjOaIkOWKnyEnCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICBuYW1lOiAnbG9naW4nCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChyZXNwLmRhdGEuc3RhdHVzID09ICJjb2RlRXJyb3IiKSB7CiAgICAgICAgICAgICAgX3RoaXMuJG1lc3NhZ2UoewogICAgICAgICAgICAgICAgdHlwZTogJ2ZhaWwnLAogICAgICAgICAgICAgICAgbWVzc2FnZTogJ+mqjOivgeeggemUmeivryEnCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChyZXNwLmRhdGEuc3RhdHVzID09ICJleGlzdCIpIHsKICAgICAgICAgICAgICBfdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgICAgICAgICB0eXBlOiAnd2FyaW5nJywKICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICfotKblj7flkI3lt7LlrZjlnKghJwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICBoYW5kbGVDb25maXJtQmx1cihlKSB7CiAgICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7CiAgICAgIHRoaXMuY29uZmlybURpcnR5ID0gdGhpcy5jb25maXJtRGlydHkgfHwgISF2YWx1ZTsKICAgIH0sCgogICAgY29tcGFyZVRvRmlyc3RQYXNzd29yZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgY29uc3QgZm9ybSA9IHRoaXMuZm9ybTsKCiAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZSAhPT0gZm9ybS5nZXRGaWVsZFZhbHVlKCdwYXNzd29yZCcpKSB7CiAgICAgICAgY2FsbGJhY2soJ+S4pOasoei+k+WFpeeahOWvhueggeS4jeS4gOiHtCcpOwogICAgICB9IGVsc2UgewogICAgICAgIGNhbGxiYWNrKCk7CiAgICAgIH0KICAgIH0sCgogICAgdmFsaWRhdGVUb05leHRQYXNzd29yZChydWxlLCB2YWx1ZSwgY2FsbGJhY2spIHsKICAgICAgY29uc29sZS5sb2codmFsdWUpOwogICAgICBjb25zdCBmb3JtID0gdGhpcy5mb3JtOwoKICAgICAgaWYgKHZhbHVlICYmIHRoaXMuY29uZmlybURpcnR5KSB7CiAgICAgICAgZm9ybS52YWxpZGF0ZUZpZWxkcyhbJ2NvbmZpcm0nXSwgewogICAgICAgICAgZm9yY2U6IHRydWUKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgY2FsbGJhY2soKTsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"mappings":"AA+GA;EACAA;IACA;MACAC,gBADA;MAEAC,gBAFA;MAGAC,mBAHA;MAIAC,sBAJA;MAKAC;QACAC;UACAC;YAAAC;UAAA,CADA;UAEAC;YAAAD;UAAA;QAFA,CADA;QAKAE;UACAH;YAAAC;UAAA,CADA;UAEAC;YAAAD;UAAA;QAFA;MALA,CALA;MAeAG;QACAD;UACAH;YACAC,QADA;YAEAI;UAFA,CADA;UAKAH;YACAD,QADA;YAEAI;UAFA;QALA;MADA;IAfA;EA4BA,CA9BA;;EA+BAC;IACA;MAAAC;IAAA;EACA,CAjCA;;EAmCAC;IACAC,cACA;MACA;MACA;MACA;MACA;MACA;MAEA;IACA,CAVA;;IAWAC;MACA;MACA;;MACA;QACA;QACA;MACA;;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA,CAZA,CAaA;;;MACA;MACA;MACA;QACA;;QACA;UACA;QACA;;QACA;UACA;UACA;UACAC;QACA;;QACAC;MACA,CAXA,EAWA,IAXA,EAhBA,CA4BA;;MAEA;MACAnB;;MACA;;MACA;QACAoB,8BADA;QAEAC,cAFA;QAGArB,UAHA;QAIAsB;UACA;QADA,CAJA;QAOAC;MAPA,GAQAC,IARA,CAQA;QACAC;MACA,CAVA;IAaA,CAzDA;;IA0DAC;MACA;IACA,CA5DA;;IA6DAC;MACAC;MACA;QACA;;QAEA;UACA;YACAC,eADA;YAEAC;UAFA;QAIA,CALA,MAMA;UACA;YACAV,kCADA;YAEAC,cAFA;YAGArB,YAHA;YAIA+B,mBACA;cACA;;cACA;gBACAC;cACA;;cACAA;cACA;YACA,CARA,CAJA;YAcAV;cACA;YADA,CAdA;YAiBAC;UAjBA,GAkBAC,IAlBA,CAkBA;YACA;cACAS;gBACAJ,eADA;gBAEAC;cAFA;;cAIAG;gBAAAnB;cAAA;YACA;;YACA;cACAmB;gBACAJ,YADA;gBAEAC;cAFA;YAIA;;YACA;cACAG;gBACAJ,cADA;gBAEAC;cAFA;YAIA;UACA,CAtCA;QAuCA;MACA,CAlDA;IAmDA,CAlHA;;IAmHAI;MACA;MACA;IACA,CAtHA;;IAuHAC;MACA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA;IACA,CA9HA;;IA+HAC;MACAC;MACA;;MACA;QACAC;UAAAC;QAAA;MACA;;MACAJ;IACA;;EAtIA;AAnCA","names":["data","codeState","codetxt","confirmDirty","autoCompleteResult","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","beforeCreate","name","methods","codeChange","sendCode","clearInterval","i","url","method","headers","crossDomain","then","resp","gotoLogin","handleSubmit","e","type","message","transformRequest","ret","_this","handleConfirmBlur","compareToFirstPassword","callback","validateToNextPassword","console","form","force"],"sourceRoot":"src/views","sources":["register.vue"],"sourcesContent":["<template>\n\n  <div class=\"register\">\n    <div class=\"title\">\n      <h1>用户注册</h1>\n    </div>\n    <a-form :form=\"form\" @submit=\"handleSubmit\">\n      <a-form-item v-bind=\"formItemLayout\">\n        <span slot=\"label\">\n          账号&nbsp;\n          <a-tooltip title=\"不得出现中文字符\">\n            <a-icon type=\"question-circle-o\" />\n          </a-tooltip>\n        </span>\n        <a-input v-decorator=\"[\n          'username',\n          {\n            rules: [{ required: true, message: '请输入您的用户名', whitespace: true }],\n          },\n        ]\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"账号密码\" has-feedback>\n        <a-input v-decorator=\"[\n          'password',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入账号密码!',\n              },\n              {\n                validator: validateToNextPassword,\n              },\n            ],\n          },\n        ]\" type=\"password\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"确认密码\" has-feedback>\n        <a-input v-decorator=\"[\n          'confirm',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入账号密码!',\n              },\n              {\n                validator: compareToFirstPassword,\n              },\n            ],\n          },\n        ]\" type=\"password\" @blur=\"handleConfirmBlur\" size=\"large\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"E-mail\">\n        <a-input v-decorator=\"[\n          'email',\n          {\n            rules: [\n              {\n                type: 'email',\n                message: '邮箱不合法!',\n              },\n              {\n                required: true,\n                message: '请输入你的邮箱!',\n              },\n            ],\n          },\n        ]\" size=\"large\" @change=\"codeChange\" />\n      </a-form-item>\n      <a-form-item v-bind=\"formItemLayout\" label=\"验证码\">\n        <a-input v-decorator=\"[\n          'codeNumber',\n          {\n            rules: [\n              {\n                required: true,\n                message: '请输入你的验证码!',\n              },\n            ],\n          },\n        ]\" size=\"large\" style=\"width:50%;float:left;margin-right: 5%;\" :maxLength=\"10\" />\n        <a-button type=\"primary\" @click=\"sendCode()\" :disabled=\"codeState\">\n          {{ codetxt }}\n        </a-button>\n      </a-form-item>\n      <a-form-item v-bind=\"tailFormItemLayout\">\n        <a-checkbox v-decorator=\"['agreement', { valuePropName: 'checked' }]\">\n          我已经阅读\n          <a href=\"\">\n            本网站协议\n          </a>\n        </a-checkbox>\n      </a-form-item>\n      <a-form-item v-bind=\"tailFormItemLayout\">\n        <a-button type=\"primary\" html-type=\"submit\">\n          点击注册\n        </a-button>\n        <a-button @click=\"gotoLogin\" style=\"margin-left:100px\" type=\"primary\">\n          返回登录\n        </a-button>\n      </a-form-item>\n    </a-form>\n\n  </div>\n\n\n</template>\n<script>\n\n\nexport default {\n  data() {\n    return {\n      codeState: false,\n      codetxt: '获取验证码',\n      confirmDirty: false,\n      autoCompleteResult: [],\n      formItemLayout: {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      },\n      tailFormItemLayout: {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      },\n    };\n  },\n  beforeCreate() {\n    this.form = this.$form.createForm(this, { name: 'register' });\n  },\n\n  methods: {\n    codeChange() {\n      // let error = this.form.getFieldError('email');\n      // if (!error) {\n      //   this.codeState = false;\n      // }\n      // else {\n      //   this.codeState = true;\n\n      // }\n    },\n    sendCode() {\n      let email = this.form.getFieldValue('email');\n      let error = this.form.getFieldError('email');\n      if (email == undefined || email == \"\") {\n        this.form.validateFields(['email']);\n        return;\n      }\n      if (!error) {\n        this.codeState = false;\n      }\n      else {\n        return;\n      }\n      // 更换样式\n      const t = 60;\n      var i = t;\n      let timer = setInterval(() => {\n        this.codetxt = i + \"s后重新获取\";\n        if (i == t) {\n          this.codeState = true;\n        }\n        if (i == 0) {\n          this.codeState = false;\n          this.codetxt = '获取验证码';\n          clearInterval(timer);\n        }\n        i--;\n      }, 1000)\n      // 发送验证码请求\n      \n      let data = new FormData();\n      data.append('email', email);\n      var _this = this;\n      this.axios({\n        url: _this.$serveUrL + \"/code\",\n        method: \"post\",\n        data: data,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        crossDomain: true,\n      }).then(function (resp) {\n       resp;\n      })\n\n\n    },\n    gotoLogin() {\n      this.$router.go(-1);\n    },\n    handleSubmit(e) {\n      e.preventDefault();\n      this.form.validateFieldsAndScroll((err, values) => {\n        var _this = this;\n\n        if (err) {\n          this.$message({\n            type: 'warning',\n            message: '请填写完整信息!'\n          });\n        }\n        else {\n          this.axios({\n            url: _this.$serveUrL + \"/user/add\",\n            method: \"post\",\n            data: values,\n            transformRequest: [\n              function (data) {\n                let ret = ''\n                for (let it in data) {\n                  ret += encodeURIComponent(it) + '=' + encodeURIComponent(data[it]) + '&'\n                }\n                ret = ret.substring(0, ret.lastIndexOf('&'));\n                return ret\n              }\n            ],\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            crossDomain: true,\n          }).then(function (resp) {\n            if (resp.data.status == \"success\") {\n              _this.$message({\n                type: 'success',\n                message: '注册成功!'\n              });\n              _this.$router.push({ name: 'login' });\n            }\n            if (resp.data.status == \"codeError\") {\n              _this.$message({\n                type: 'fail',\n                message: '验证码错误!'\n              });\n            }\n            if (resp.data.status == \"exist\") {\n              _this.$message({\n                type: 'waring',\n                message: '账号名已存在!'\n              });\n            }\n          });\n        }\n      });\n    },\n    handleConfirmBlur(e) {\n      const value = e.target.value;\n      this.confirmDirty = this.confirmDirty || !!value;\n    },\n    compareToFirstPassword(rule, value, callback) {\n      const form = this.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不一致');\n      } else {\n        callback();\n      }\n    },\n    validateToNextPassword(rule, value, callback) {\n      console.log(value);\n      const form = this.form;\n      if (value && this.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    },\n\n  },\n};\n</script>\n<style >\nbody {\n  background-image: url(\"../assets/logo/back.png\");\n}\n\n.title {\n  text-align: center;\n  margin-left: 130px;\n  margin-bottom: 30px;\n}\n\n.register {\n  width: 450px;\n  height: 220px;\n  position: absolute;\n  top: 45%;\n  left: 50%;\n  margin-top: -250px;\n  margin-left: -210px;\n}\n</style>"]}]}