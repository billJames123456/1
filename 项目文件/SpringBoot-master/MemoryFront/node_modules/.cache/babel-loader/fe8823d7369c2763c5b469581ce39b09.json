{"remainingRequest":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\thread-loader\\dist\\cjs.js!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\views\\Home.vue","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\babel.config.js","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\.babelrc","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1719542175240},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js","mtime":1719542186130},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1719542174992}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"AAiGA;EACAA;IACA;MACAC,mCADA;MAEAC,mBAFA;MAGAC,cAHA;MAIAC,QAJA;MAKAC,oBALA;MAMAC,cANA;MAOAC,SAPA;MAOA;MACAC,wBARA;MASA;MACAC,kBAVA;MAWAC,oBAXA;MAYAC,oBAZA;MAaAC,gBAbA;MAaA;MACAC,yBAdA;MAeAC,mBAfA;MAiBA;MACAC,SACA;QACAC,WADA;QAEAC,oFAFA;QAGAC;MAHA,CADA,CAlBA;MAyBAC,kBACA,uEADA,CAzBA;MA6BA;MACAC,yBA9BA;MA8BA;MACAC,oBA/BA;MA+BA;MACA;MACAC,YACA;QACAC,aADA;QAEAC,YAFA;QAGAC;MAHA,CADA,CAjCA;MAyCA;MACAC;QACAC,eADA;QAEAC,WAFA;QAGAC;MAHA,CA1CA;MA+CAC,8BA/CA;MA+CA;MACAC,mDAhDA;MAgDA;MAEA;MACAC,eAnDA;MAmDA;MACAC,mBApDA;MAoDA;MACAC,gBArDA;MAqDA;MACAC,sBAtDA;MAwDA;MACAC,oBAzDA;MA0DAC,eA1DA;MA0DA;MACAC,sBA3DA;MA2DA;MACAC,sBA5DA;MA4DA;MAEA;MACAC,YA/DA;MA+DA;MACAC,eAhEA;MAgEA;MACAC,cAjEA,CAiEA;;IAjEA;EAoEA,CAtEA;;EAuEAC,WAEA,CAzEA;;EA0EAC,gBACA,CA3EA;;EA4EAC;IAEA;IACAC;;IACA;MACA;QACAC,iBADA;QAEAC;MAFA;MAIA;QAAAC;MAAA;IACA,CANA,MAOA;MACA;IACA;;IACA;IACA;EACA,CA5FA;;EA6FAC;IACA;IACAC;MACA;IACA,CAJA;;IAKA;IACAC;MACA;IACA,CARA;;IASAC;MACA;MACA;IACA,CAZA;;IAaAC;MACA;;MACA;;MACA;MACAC;MACAA;MACAA;MACA;QACAC,8CADA;QAEAC,cAFA;QAGAzD;MAHA,GAIA0D,IAJA,CAIA;QACA;UACAC;YACAZ,kBADA;YAEAC;UAFA;;UAIAW;QACA,CANA,MAOA;UACA;QACA;MACA,CAfA;IAgBA,CApCA;;IAqCAC;MACA;;MACA;QACA;QACA;QACA;MACA;;MACA;;MACA;;MACA;MACAL;MACAA;MACA;QACAC,8CADA;QAEAC,cAFA;QAGAzD;MAHA,GAIA0D,IAJA,CAIA;QACA;UACAC;YACAZ,kBADA;YAEAC;UAFA;;UAIAW;QACA,CANA,MAOA;UACA;QACA;MACA,CAfA;IAkBA,CAnEA;;IAoEAE;MACA;MACAC;QACAC;UACA;UACA;UACAC;UACAA;UACAA;UACAC;QACA,CAPA;MAQA,CATA;IAUA,CAhFA;;IAiFAC;MACA;QACAC,uBADA;QAEAC,sBAFA;QAGApB;MAHA,GAIAU,IAJA,CAIA;QACA;;QACA;;QACA;QACAH;QACAA;QACA;UACAC,qCADA;UAEAC,cAFA;UAGAzD;QAHA,GAIA0D,IAJA,CAIA;UACA;YACAC;cACAZ,kBADA;cAEAC;YAFA;;YAIAW;;YACAA;UACA,CAPA,MAQA;YACA;UACA;QACA,CAhBA;MAiBA,CA3BA;IA4BA,CA9GA;;IA+GAU;MACA;;MACA;MACAd;MACA;QACAC,8CADA;QAEAC,cAFA;QAGAzD;MAHA,GAIA0D,IAJA,CAIA;QACA;UAEAC;QACA,CAHA,MAIA;UACA;QACA;MACA,CAZA;IAaA,CAhIA;;IAiIAW;MACA;;MACA;MACA;MACAf;MACA;QACAC,gCADA;QAEAC,cAFA;QAGAzD;MAHA,GAIA0D,IAJA,CAIA;QAEA;UACA;UACAC;UACAA;UACAA;QAEA;MACA,CAbA;IAcA,CApJA;;IAqJAY;MACA;MACApE;;MACA;QACA;UAAA;YACA;YACA;YACA;YACA;UACA;;QACA;UAAA;YACA;YACA;YACA;YACA;UACA;;QACA;UAAA;YACA;YACA;YACA;YACA;UACA;;QACA;UAAA;YACA;UACA;;QACA;UAAA;MAtBA;IAwBA,CAhLA;;IAiLAqE;MACA;;MACA;MACA;MACAjB;MACAA;MACAA;;MACA;QACAA;QACAkB;MACA;;MACA;QACAlB;QACAkB;MACA;;MACA;QACAjB,gCADA;QAEAC,cAFA;QAGAzD;MAHA,GAIA0D,IAJA,CAIA;QACA;UACAC;UACAA;;UACA;YACAA;UACA;;UACAA;UACAA;QAEA;MACA,CAfA;IAgBA,CAhNA;;IAkNAe;MACA;QACA;QACAC;UACA;UACA;YACA,gCACAC,OADA,CACAC,mBADA,IACA,EADA;UAEA,CAHA;QAIA,CANA,EAMA,GANA;MAOA,CATA,MASA;QACA;MACA;IACA,CA/NA;;IAiOA;IACAC;MACA;QACA;QACA;;QACA;UACA;UACA;QACA;MACA,CAPA,MAQA;QACA;QACA;MACA;IACA,CA/OA;;IAgPA;IACAC;MACA;QACA;QACA;QACA;;QACA;UACA;QACA;MACA,CAPA,MAQA;QACA;QACA;MACA;;MACA;MACA;MACA;IACA,CAjQA;;IAkQA;IACAC;MACA;MACA;;MACA;QACA;MACA;IACA,CAzQA;;IA0QA;IACAC;MACA;MACA;MACA;MACA;IACA,CAhRA;;IAiRA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MAGA;IACA,CA9RA;;IA+RAC;MACA;MACA;MACA;MACA;IACA;;EApSA;AA7FA","names":["data","page_size","options","value","list","states","loading","token","serveUrL","activeIndex","timeTitle","typeTitle","arrPath","placeholder","isRouterAlive","images","imageId","compressUrL","imageName","previewImageUrL","dialogTableVisible","currentRowData","albumData","albumName","albumImg","albumId","reactiveImage","margin","width","height","imageTypes","imageTimes","checkAll","checkedImgIndex","checkedImgId","isIndeterminate","checkedStatus","checkedCount","displayTopMenu","displayCheckedMenu","pageSize","totalCount","currentPage","created","beforeCreate","mounted","console","message","type","name","methods","handleTableCurrentChange","getSrcList","openAlbum","addAlbum","formData","url","method","then","_this","downloadImage","downloadPicture","fetch","res","a","window","deleteImage","confirmButtonText","cancelButtonText","selectAlbums","selectAllTimeType","handleSelect","selectAllImage","requestApi","remoteMethod","setTimeout","indexOf","query","SwitchDisplay","handleCheckAllChange","handleCheckIndexToId","handleCheckedImgChange","handleSizeChange","handleCurrentChange"],"sourceRoot":"src/views","sources":["Home.vue"],"sourcesContent":["<template>\n  <div id=\"main\">\n    <!-- 顶部菜单 ref:组件对象，获取高度 horizontal:横向导航栏-->\n    <el-menu :default-active=\"activeIndex\" ref=\"top_menu\" mode=\"horizontal\" @select=\"handleSelect\"\n      background-color=\"#545c64\" text-color=\"#fff\" active-text-color=\"#ffd04b\" :style=\"displayTopMenu\">\n      <el-menu-item index=\"all\">全 部 图 片</el-menu-item>\n      <el-submenu index=\"type\" style=\"width:130px;\">\n        <template slot=\"title\">{{ typeTitle }}</template>\n        <el-menu-item v-for=\"(item, index) in imageTypes \" :key=\"index\" :index=\"item\">{{ item }}</el-menu-item>\n      </el-submenu>\n      <el-submenu index=\"time\" style=\"width:130px\">\n        <template slot=\"title\">{{ timeTitle }}</template>\n        <el-menu-item v-for=\"(item, index) in imageTimes\" :key=\"index\" :index=\"item\">{{ item }}</el-menu-item>\n      </el-submenu>\n\n      <el-menu-item index=\"search\">\n        <el-select style=\"padding: 0px 20px\" v-model=\"value\" multiple filterable remote reserve-keyword\n          :placeholder=\"placeholder\" :remote-method=\"remoteMethod\" :loading=\"loading\">\n          <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </el-menu-item>\n\n      <el-menu-item :index=\"'search,' + value[0]\">搜 索</el-menu-item>\n    </el-menu>\n\n    <!-- 选中菜单 -->\n    <div id=\"check_menu\" :style=\"displayCheckedMenu\">\n      <div class=\"check_menu_item\"> <a @click=\"handleCheckAllChange(false)\">\n          <svg-icon icon-file-name=\"chacha\" />\n        </a></div>\n      <div class=\"check_menu_item check_menu_txt\">已选择{{ checkedCount }}张图片</div>\n      <div class=\"check_menu_feature\">\n        <a title=\"全选图片\" @click=\"handleCheckAllChange(!checkedStatus)\">\n          <svg-icon icon-file-name=\"all\">\n          </svg-icon>\n        </a>\n        <a title=\"添加相册\" @click=\"openAlbum()\">\n          <svg-icon icon-file-name=\"add\" />\n        </a>\n        <a title=\"下载图片\" @click=\"downloadImage()\">\n          <svg-icon icon-file-name=\"download\" />\n        </a>\n        <a title=\"删除图片\" @click=\"deleteImage()\">\n          <svg-icon icon-file-name=\"delete\" />\n        </a>\n      </div>\n    </div>\n\n    <!-- 添加相册表格 -->\n    <el-dialog title=\"添加相册\" :visible.sync=\"dialogTableVisible\" width=\"25%\">\n      <el-table ref=\"singleTable\" :data=\"albumData\" :show-header=\"false\" highlight-current-row max-height=\"300px\"\n        @current-change=\"handleTableCurrentChange\">\n        <el-table-column property=\"albumImg\" label=\"描述图片\" width=\"180\">\n          <!-- 将图片添加到表格中 -->\n          <template slot-scope=\"scope\">\n            <img :src=\"serveUrL + scope.row.albumImg\" style=\"height:5em;width:9em\" />\n          </template>\n        </el-table-column>\n        <el-table-column property=\"albumName\" label=\"相册名称\">\n        </el-table-column>\n      </el-table>\n      <el-button type=\"primary\" size=\"small\" style=\"margin-left: 45%; margin-top: 10px;\" @click=\"addAlbum()\">添加\n      </el-button>\n    </el-dialog>\n\n    <!-- 图片及复选框 -->\n    <div id=\"image-content\">\n      <div class=\"image-item\" v-for=\"(item, index) in images\" :key=\"index\" :style=\"reactiveImage\">\n        <el-checkbox-group v-model=\"checkedImgIndex\" @change=\"handleCheckedImgChange\" class=\"check-box\"\n          :style=\"displayCheckedMenu\">\n          <el-checkbox :label=\"index\">\n          </el-checkbox>\n        </el-checkbox-group>\n\n        <el-image :src=\"serveUrL + item.compressUrL\" :preview-src-list=\"getSrcList(index)\" class=\"image\">\n          <div slot=\"placeholder\" class=\"image-slot\" element-loading-text=\"图片加载中...\" v-loading=\"true\"\n            style=\"margin-top:40%\">\n          </div>\n        </el-image>\n      </div>\n    </div>\n\n    <!-- 分页条 -->\n    <div id=\"pagination\">\n      <div id=\"pagination-son\">\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"currentPage\"\n          :page-sizes=\"page_size\" :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"totalCount\">\n        </el-pagination>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      page_size: [10, 15, 20, 25, 30, 40],\n      options: ['s', 's'],\n      value: ['游乐场'],\n      list: [],\n      states: [\"风景\", \"动物\"],\n      loading: false,\n      token: '',  //token凭证\n      serveUrL: this.$serveUrL,\n      // 顶部菜单\n      activeIndex: 'all',\n      timeTitle: '拍 摄 时 间',\n      typeTitle: '图 片 类 别',\n      arrPath: ['all'],   //存放当前菜单路径\n      placeholder: '请输入关键词查询图片',\n      isRouterAlive: true,\n\n      // 后端查询的图片数据\n      images: [\n        {\n          imageId: '',\n          compressUrL: 'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg',\n          imageName: '',\n        }\n      ],\n      previewImageUrL: [\n        'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg',\n      ],\n\n      //添加到相册\n      dialogTableVisible: false,//菜单状态\n      currentRowData: null, //当前行相册数据对象\n      //相册数据\n      albumData: [\n        {\n          albumName: '',\n          albumImg: '',\n          albumId: '',\n        }\n      ],\n\n      // 响应式布局图片大小css\n      reactiveImage: {\n        margin: '0.3em',\n        width: '9%',\n        height: '29%',\n      },\n      imageTypes: ['美女', '宠物', '植物'],//所有图片类型\n      imageTimes: ['2021-8-26', '2022-9-23', '2022-9-26'],  //所有图片时间\n\n      //复选框\n      checkAll: false,       //是否全选\n      checkedImgIndex: [],   //图片索引数组\n      checkedImgId: [],      //图片id数组\n      isIndeterminate: false,\n\n      //用户勾选图片，菜单的显示与隐藏\n      checkedStatus: false,\n      checkedCount: 0, //勾选数量\n      displayTopMenu: 'true', //显示\n      displayCheckedMenu: '',  //隐藏\n\n      //  分页模块\n      pageSize: 20,// 每页显示的条数\n      totalCount: 100, // 总记录数\n      currentPage: 1, // 当前页码\n\n    };\n  },\n  created() {\n\n  },\n  beforeCreate() {\n  },\n  mounted() {\n\n    var cookie = this.$cookie.getCookie();\n    console.log(cookie)\n    if (cookie[0] != \"token\") {\n      this.$message({\n        message: '登录已过期!',\n        type: 'error'\n      });\n      this.$router.push({ name: 'login' });\n    }\n    else {\n      this.token = cookie[1];\n    }\n    this.selectAllTimeType();\n    this.selectAllImage();\n  },\n  methods: {\n    // 添加到相册表格方法\n    handleTableCurrentChange(val) {\n      this.currentRowData = val;\n    },\n    // 其中大图预览目前总是从第一张开始,简单处理下,就是构建一个以当前图片为起始的数组\n    getSrcList(index) {\n      return this.previewImageUrL.slice(index).concat(this.previewImageUrL.slice(0, index))\n    },\n    openAlbum() {\n      this.selectAlbums();\n      this.dialogTableVisible = true;\n    },\n    addAlbum() {\n      this.handleCheckIndexToId();\n      var _this = this;\n      const formData = new FormData();\n      formData.append('token', this.token);\n      formData.append('imageId', this.checkedImgId);\n      formData.append('albumId', this.currentRowData.albumId);\n      this.axios({\n        url: this.$serveUrL + \"/album/addImageToAlbum\",\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n          _this.$message({\n            message: '添加相册成功！',\n            type: 'success'\n          });\n          _this.dialogTableVisible = false;\n        }\n        else {\n          1;\n        }\n      })\n    },\n    downloadImage() {\n      var imgIndex = this.checkedImgIndex;\n      for (let i = 0; i < imgIndex.length; i++) {\n        let imgUrl = this.previewImageUrL[imgIndex[i]];\n        let imgName = this.images[imgIndex[i]].imageName;\n        this.downloadPicture(imgUrl, imgName);\n      }\n      this.handleCheckIndexToId();\n      var _this = this;\n      const formData = new FormData();\n      formData.append('token', this.token);\n      formData.append('number', this.checkedImgId.length);\n      this.axios({\n        url: this.$serveUrL + \"/record/recordDownload\",\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n          _this.$message({\n            message: '图片下载成功！',\n            type: 'success'\n          });\n          _this.dialogTableVisible = false;\n        }\n        else {\n          1;\n        }\n      })\n\n\n    },\n    downloadPicture(imgSrc, name) {\n      // 根据url下载\n      fetch(imgSrc).then((res) => {\n        res.blob().then((blob) => {\n          const url = window.URL.createObjectURL(blob)\n          const a = document.createElement('a')\n          a.href = url\n          a.download = name\n          a.click()\n          window.URL.revokeObjectURL(url)\n        })\n      })\n    },\n    deleteImage() {\n      this.$confirm('此操作将删除所选图片, 是否继续?', '删除图片', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.handleCheckIndexToId();\n        var _this = this;\n        const formData = new FormData();\n        formData.append('token', this.token);\n        formData.append('imageId', this.checkedImgId);\n        this.axios({\n          url: this.$serveUrL + \"/image/delete\",\n          method: \"post\",\n          data: formData\n        }).then(function (resp) {\n          if (resp.data.status == \"success\") {\n            _this.$message({\n              message: '图片删除成功！',\n              type: 'success'\n            });\n            _this.handleCheckAllChange(false);\n            _this.handleSelect('', _this.arrPath);\n          }\n          else {\n            1;\n          }\n        })\n      })\n    },\n    selectAlbums() {\n      var _this = this;\n      const formData = new FormData();\n      formData.append('token', this.token);\n      this.axios({\n        url: this.$serveUrL + \"/album/selectAlbumName\",\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n\n          _this.albumData = resp.data.data;\n        }\n        else {\n          1;\n        }\n      })\n    },\n    selectAllTimeType() {\n      var _this = this;\n      const formData = new FormData();\n      let requestApi = '/image/selectTimeType';\n      formData.append(\"token\", this.token);\n      this.axios({\n        url: this.$serveUrL + requestApi,\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n\n        if (resp.data.status == \"success\") {\n          let data = resp.data.data;\n          _this.imageTypes = data.imageType;\n          _this.imageTimes = data.imageDate;\n          _this.isRouterAlive = !_this.isRouterAlive;\n\n        }\n      })\n    },\n    handleSelect(value, path) {\n      this.arrPath = path;\n      value\n      switch (path[0]) {\n        case \"all\": {\n          this.selectAllImage('', '');\n          this.timeTitle = '拍 摄 时 间';\n          this.typeTitle = '图 片 类 别';\n          break;\n        }\n        case \"type\": {\n          this.typeTitle = path[1];\n          this.timeTitle = '拍 摄 时 间';\n          this.selectAllImage('type', path[1]);\n          break;\n        }\n        case \"time\": {\n          this.timeTitle = path[1];\n          this.typeTitle = '图 片 类 别';\n          this.selectAllImage('time', path[1]);\n          break;\n        }\n        case \"search\": {\n          break;\n        }\n        default: break;\n      }\n    },\n    selectAllImage(mode, value) {\n      var _this = this;\n      const formData = new FormData();\n      let requestApi = '/image/selectAll';\n      formData.append(\"currentPage\", this.currentPage);\n      formData.append(\"pageSize\", this.pageSize);\n      formData.append(\"token\", this.token);\n      if (mode == \"type\") {\n        formData.append(\"imageType\", value);\n        requestApi = '/image/selectAllByType';\n      }\n      if (mode == \"time\") {\n        formData.append(\"imageDate\", value);\n        requestApi = '/image/selectAllByTime';\n      }\n      this.axios({\n        url: this.$serveUrL + requestApi,\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n          _this.images = resp.data.data.images;\n          _this.previewImageUrL = resp.data.data.previewImageUrL;\n          for (var i = 0; i < _this.previewImageUrL.length; i++) {\n            _this.previewImageUrL[i] = _this.serveUrL + _this.previewImageUrL[i]\n          }\n          _this.totalCount = resp.data.data.totalCount;\n          _this.isRouterAlive = !_this.isRouterAlive;\n\n        }\n      })\n    },\n\n    remoteMethod(query) {\n      if (query !== '') {\n        this.loading = true;\n        setTimeout(() => {\n          this.loading = false;\n          this.options = this.list.filter(item => {\n            return item.label.toLowerCase()\n              .indexOf(query.toLowerCase()) > -1;\n          });\n        }, 200);\n      } else {\n        this.options = [];\n      }\n    },\n\n    // 显示或隐藏顶部菜单和选中菜单\n    SwitchDisplay(checkedCount) {\n      if (checkedCount > 0) {\n        // 获取顶部菜单高度，使选中菜单保持一致\n        let h = this.$refs.top_menu.$el[\"offsetHeight\"];\n        if (this.displayTopMenu != \"display:none;\" || this.displayTopMenu == '') {\n          this.displayCheckedMenu = 'display:block;height:' + h + 'px;';\n          this.displayTopMenu = 'display:none;'\n        }\n      }\n      else {\n        this.displayCheckedMenu = '';\n        this.displayTopMenu = '';\n      }\n    },\n    //全选框\n    handleCheckAllChange(val) {\n      if (val) {\n        let len = this.images.length;\n        this.checkedCount = len;\n        this.checkedImgIndex = new Array(len);\n        for (var i = 0; i < len; i++) {\n          this.checkedImgIndex[i] = i;\n        }\n      }\n      else {\n        this.checkedImgIndex = [];\n        this.checkedCount = 0;\n      }\n      this.isIndeterminate = false;\n      this.checkedStatus = val;\n      this.SwitchDisplay(this.checkedCount);\n    },\n    //根据选中的索引转化为图片的id\n    handleCheckIndexToId() {\n      let len = this.checkedImgIndex.length;\n      this.checkedImgId = new Array(len);\n      for (let i = 0; i < len; i++) {\n        this.checkedImgId[i] = this.images[this.checkedImgIndex[i]].imageId;\n      }\n    },\n    // 部分被选中,当勾选时，上方显示操作菜单\n    handleCheckedImgChange(value) {\n      this.checkedCount = value.length;\n      this.SwitchDisplay(this.checkedCount);\n      this.checkAll = this.checkedCount === this.images.length;\n      this.isIndeterminate = this.checkedCount > 0 && this.checkedCount < this.images.length;\n    },\n    //分页条\n    handleSizeChange(val) {\n      //console.log(`每页 ${val} 条`);\n      // 重新设置每页显示的条数\n      let Wstr = ['10%', '10%', '9%', '9%', '9%', '9%', '9%'];\n      let Hstr = ['29%', '29%', '29%', '29%', '26%', '27%', '21%'];\n      this.reactiveImage.width = Wstr[val / 5 - 2];\n      this.reactiveImage.height = Hstr[val / 5 - 2];\n\n      this.pageSize = val;\n\n\n      this.handleSelect('', this.arrPath);\n    },\n    handleCurrentChange(val) {\n      //console.log(`当前页: ${val}`);\n      // 重新设置当前页码\n      this.currentPage = val;\n      this.handleSelect('', this.arrPath);\n    },\n\n  }\n}\n</script>\n<style scoped>\n#main {\n  width: 100%;\n  height: 100%;\n}\n\n#check_menu {\n  background-color: #3174ff;\n  height: 8%;\n  width: 100%;\n  z-index: 10;\n  display: none;\n  position: relative;\n}\n\n.check_menu_txt {\n  font-family: MiSans, MIUI, Helvetica Neue, Helvetica, Arial, PingFang SC, Microsoft Yahei, Hiragino Sans GB, Heiti SC, WenQuanYi Micro Hei, sans-serif;\n  color: #fff;\n  font-size: 1.35em;\n}\n\n.check_menu_item {\n  margin-left: 2em;\n  margin-top: 1em;\n  display: inline-block;\n\n}\n\n.check_menu_feature {\n  float: right;\n  margin-top: 1em;\n  margin-right: 2.8em;\n}\n\n.check_menu_feature a {\n  margin-right: 2em;\n  font-size: 1.35em;\n}\n\n#image-content {\n  margin-left: 1.6em;\n  margin-top: 2em;\n  width: 100%;\n  height: 82%;\n  overflow: scroll;\n  overflow-x: hidden;\n}\n\n.image-item {\n  margin: 15px 15px;\n  width: 12em;\n  height: 12em;\n  position: relative;\n  display: inline-block;\n}\n\n.image-item:hover .check-box {\n  display: block;\n}\n\n.image {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n\n.check-box {\n  width: 100%;\n  margin: 5px;\n  display: none;\n  position: absolute;\n}\n\n\n\n#pagination {\n  height: 6%;\n  width: 100%;\n  position: relative;\n}\n\n#pagination-son {\n  position: absolute;\n  left: 50%;\n  top: 10%;\n  transform: translate(-50%, -10%);\n}\n</style>\n<style >\n.el-checkbox__inner {\n  background-color: white;\n  opacity: 0.9;\n  border: #3174ff 1px solid;\n  border-radius: 100px;\n  width: 1.4em;\n  height: 1.4em;\n}\n\n.el-checkbox__inner::after {\n  height: 0.68em;\n  left: 0.42em;\n  width: 0.29em;\n}\n\n/* 增大点击区域，提高用户体验 */\n.el-checkbox__inner::before {\n  content: '';\n  position: absolute;\n  top: -0.625em;\n  right: -2.5em;\n  bottom: -1.875em;\n  left: -0.75em;\n}\n\n/* 相册菜单 */\n.el-menu--popup {\n  max-height: 32em;\n  overflow: auto;\n  overflow-x: hidden;\n}\n</style>\n"]}]}