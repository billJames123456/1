{"remainingRequest":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\components\\InsideAlbum.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\src\\components\\InsideAlbum.vue","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\babel.config.js","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\.babelrc","mtime":1662356225000},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\babel-loader\\lib\\index.js","mtime":1719542186130},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719542185445},{"path":"D:\\源代码及项目\\生产实习\\Picture-Master\\SpringBoot-master\\MemoryFront\\node_modules\\vue-loader\\lib\\index.js","mtime":1719542174992}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"AA0EA;EACAA,mBADA;;EAEAC;IACA;MACAC,iBADA;MAEAC,oBAFA;MAGAC,SAHA;MAGA;MACAC,mBAJA;MAKAC,wBALA;MAMA;MACAC,SACA;QACAC,qBADA;QAEAC,QACA;UACAC,WADA;UAEAC,oFAFA;UAGAC;QAHA,CADA,EAMA;UACAF,WADA;UAEAC,oFAFA;UAGAC;QAHA,CANA;MAFA,CADA,CAPA;MAwBAC,kBACA,EADA,CAxBA;MA2BA;MACAC,gBACA;QACA;QACA;MAHA,CA5BA;MAkCA;MACAC,eAnCA;MAmCA;MACAC,mBApCA;MAoCA;MACAC,gBArCA;MAqCA;MACAC,sBAtCA;MAwCA;MACAC,oBAzCA;MAyCA;MACAC,iBA1CA;MA0CA;MACAC,eA3CA;MA2CA;MACAC,sBA5CA;MA4CA;MACAC,sBA7CA;MA6CA;MAEAC,uBA/CA;MAgDAC,sBAhDA;MAmDA;MACAC,wBApDA;MAqDAC;QACA3B,QADA;QAEA4B,SAFA;QAGAC,WAHA;QAIAC,eAJA;QAKAC,QALA;QAMAC,YANA;QAOAC;MAPA,CArDA;MA8DAC;IA9DA;EAgEA,CAnEA;;EAoEAC,WAEA,CAtEA;;EAwEA;EACAC;IAEA;IACA;IACA;;IACA;MACA;QACAC,iBADA;QAEAN;MAFA;MAIA;QAAA/B;MAAA;IACA,CANA,MAOA;MACA;IACA;;IACA;EAGA,CA3FA;;EA4FAsC;IAEAC;MACA;;MACA;MACAC;MACAA;MACA;QACAC,6CADA;QAEAC,cAFA;QAGAzC;MAHA,GAIA0C,IAJA,CAIA;QACA;UACAC;UACAA;;UACA;YACAA;UACA;;UACAA,2CANA,CAOA;;UACA;YACAA;YACAA;UACA,CAHA,MAIA;YACAA;YACAA;UACA;QACA;MACA,CAtBA;IAwBA,CA/BA;;IAgCAC;MACA;MACAC;;MACA;QAEA;UACAT,0BADA;UAEAN;QAFA;QAIA;MACA;;MACA;QACAgB,uBADA;QAEAC,sBAFA;QAGAjB;MAHA,GAIAY,IAJA,CAIA;QAEA;;QACAG;QACA;QACAN;QACAA;QACAA;QACA;UACAC,4CADA;UAEAC,cAFA;UAGAzC;QAHA,GAIA0C,IAJA,CAIA;UACA;YACAC;cACAP,oBADA;cAEAN;YAFA;;YAIAa;;YACAA;UACA,CAPA,MAQA;YACA;UACA;QACA,CAhBA;MAiBA,CA7BA;IA8BA,CAzEA;;IA0EAK;MACA;QACAF,uBADA;QAEAC,sBAFA;QAGAjB;MAHA,GAIAY,IAJA,CAIA;QACA;;QACA;;QACAG;QACA;QACAN;QACAA;QACAA;QACA;UACAC,mDADA;UAEAC,cAFA;UAGAzC;QAHA,GAIA0C,IAJA,CAIA;UACA;YACAC;cACAP,kBADA;cAEAN;YAFA;;YAIAa;;YACAA;UACA,CAPA,MAQA;YACA;UACA;QACA,CAhBA;MAiBA,CA7BA;IA8BA,CAzGA;;IA0GAM;MACA;MACA;MACA;;MACA;QACA;UACAC;QACA;MACA;;MACAA,0BATA,CASA;;MACA;QACAC;QACA;QACA;QACA;MACA;;MACA;;MACA;;MACA;MACAZ;MACAA;MACA;QACAC,8CADA;QAEAC,cAFA;QAGAzC;MAHA,GAIA0C,IAJA,CAIA;QACA;UACAC;YACAP,kBADA;YAEAN;UAFA;;UAIAa;QACA,CANA,MAOA;UACA;QACA;MACA,CAfA;IAgBA,CA/IA;;IAgJAS;MACA;MACAC;QACAC;UACA;UACA;UACAC;UACAA;UACAA;UACAC;QACA,CAPA;MAQA,CATA;IAUA,CA5JA;;IA8JA;IACAC;MACA;;MACA;QACA;UACAP;QACA;MACA;;MAEA;IACA,CAxKA;;IAyKA;IACAQ;MACA;QACA;QACA;UACA;UACA;QACA;MACA,CANA,MAOA;QACA;QACA;MACA;IACA,CAtLA;;IAuLA;IACAC;MACAd;;MACA;QACA;QACAA;QACA;QACA;;QACA;UACA;QACA;MACA,CARA,MASA;QACA;QACA;MACA;;MACA;MACA;MACA;IAEA,CA3MA;;IA6MA;IACAe;MACA;QACA;QACA;;QACA;UACA;YACAV;UACA;QACA;;QACA;QAEA;QACAA;;QACA;UACA;YACA;UACA;QACA;MACA,CAjBA,MAkBA;QACA;QACA;MACA;;MACA;MACA;MACA;IACA,CAxOA;;IAyOA;IACAW;MACA;MACA;MACA;;MACA;QACA;QACAC;QACAjB;MAEA;;MACA;IACA,CArPA;;IAsPA;IACAkB;MACA;MAEA;MACA;MACA;MACA;IACA;;EA9PA;AA5FA","names":["name","data","currentAlbumId","currentAlbumName","token","isRouterAlive","serveUrL","images","time","image","imageId","compressUrL","imageName","previewImageUrL","reactiveImage","checkAll","checkedImgIndex","checkedImgId","isIndeterminate","checkedStatus","checkedPart","checkedCount","displayTopMenu","displayCheckedMenu","empty1","empty2","dialogFormVisible","form","title","content","delivery","type","resource","desc","formLabelWidth","created","mounted","message","methods","selectAllImage","formData","url","method","then","_this","setAlbumCover","console","confirmButtonText","cancelButtonText","removeImage","downloadImage","count","str","downloadPicture","fetch","res","a","window","getSrcList","SwitchDisplay","handleCheckPartChange","handleCheckAllChange","handleCheckIndexToId","array","handleCheckedImgChange"],"sourceRoot":"src/components","sources":["InsideAlbum.vue"],"sourcesContent":["<template>\n  <div id=\"main\">\n    <!-- 标题 -->\n    <div :style=\"displayTopMenu\" id=\"album_top\">\n      <a class=\"album-icon\" title=\"返回首页\" @click=\"$router.push({ name: 'Album' });\">\n        <svg-icon icon-file-name=\"home\" />\n      </a>\n      <span>{{ currentAlbumName }}</span>\n    </div>\n    <!-- 选中菜单 -->\n    <div id=\"albumCheck_menu\" :style=\"displayCheckedMenu\">\n      <div class=\"check_menu_item\">\n        <div> </div>\n        <div class=\"check_menu_txt\"><a style=\"vertical-align:middle;margin-right: 1.5em;\"\n            @click=\"handleCheckAllChange(false)\">\n            <svg-icon icon-file-name=\"chacha\" />\n          </a>已选择{{ checkedCount }}张图片</div>\n      </div>\n      <div class=\"check_menu_feature\">\n        <a title=\"全选图片\" @click=\"handleCheckAllChange(!checkedStatus)\">\n          <svg-icon icon-file-name=\"all\">\n          </svg-icon>\n        </a>\n        <a title=\"移除相册\" @click=\"removeImage()\">\n          <svg-icon icon-file-name=\"remove\" />\n        </a>\n        <a title=\"下载图片\" @click=\"downloadImage()\">\n          <svg-icon icon-file-name=\"download\" />\n        </a>\n        <a title=\"修改封面\" @click=\"setAlbumCover()\">\n          <svg-icon icon-file-name=\"set\" />\n        </a>\n      </div>\n    </div>\n    <el-divider></el-divider>\n    <!-- 图片区域 -->\n    <div id=\"album-content\" :style=\"empty1\">\n      <div id=\"album-image-content\">\n        <div v-for=\"(group, i) in images\" :key=\"i\" class=\"album-image-group\">\n\n          <div class=\"album-image-time\">\n            <el-checkbox :style=\"displayCheckedMenu\" class=\"time-select\"  @change=\"handleCheckPartChange(i,checkedPart)\">\n              </el-checkbox>\n            <span class=\"time-txt\"> {{ group.time }}</span>\n          </div>\n          \n          <div class=\"image-item\" :style=\"reactiveImage\" v-for=\"(item, j) in group.image\" :key=\"j\" >\n            <el-checkbox-group  v-model=\"checkedImgIndex\" @change=\"handleCheckedImgChange\" class=\"check-box\" :style=\"displayCheckedMenu\">\n              <el-checkbox :label=\"i + ',' + j\">\n              </el-checkbox>\n            </el-checkbox-group>\n            <!-- serveUrL + -->\n            <el-image :src=\"serveUrL + item.compressUrL\" :preview-src-list=\"getSrcList(i, j)\" class=\"image\" lazy>\n              <div slot=\"placeholder\" class=\"image-slot\" style=\"margin-top:3em\">\n                <svg-icon icon-file-name=\"loading\" style=\"vertical-align:-5px\">\n                </svg-icon>加载中\n              </div>\n            </el-image>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n    <div :style=\"empty2\">\n      <el-empty :image-size=\"200\" description=\"暂无图片\">\n        <el-button type=\"primary\" @click=\"$router.push({ name: 'upload' });\">去上传</el-button>\n      </el-empty>\n    </div>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'InsideAlbum',\n  data() {\n    return {\n      currentAlbumId: 0,\n      currentAlbumName: '',\n      token: '',  //token凭证\n      isRouterAlive: true,\n      serveUrL: this.$serveUrL,\n      // 后端查询的图片数据\n      images: [\n        {\n          time: '2021年8月31日星期一',\n          image: [\n            {\n              imageId: '',\n              compressUrL: 'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg',\n              imageName: '',\n            },\n            {\n              imageId: '',\n              compressUrL: 'https://cube.elemecdn.com/6/94/4d3ea53c084bad6931a56d5158a48jpeg.jpeg',\n              imageName: '',\n            }\n          ]\n        }\n      ],\n      previewImageUrL: [\n        '',\n      ],\n      // 响应式布局图片大小css\n      reactiveImage: {\n        // margin: '0.3em',\n        // width: '15em',\n        // height: '20em',\n      },\n\n      //复选框\n      checkAll: false,       //是否全选\n      checkedImgIndex: [],   //图片索引数组\n      checkedImgId: [],      //图片id数组\n      isIndeterminate: false,\n\n      //用户勾选图片，菜单的显示与隐藏\n      checkedStatus: false,//是否全选\n      checkedPart:true,//是否 部分选\n      checkedCount: 0, //勾选数量\n      displayTopMenu: 'true', //显示\n      displayCheckedMenu: '',  //隐藏\n\n      empty1: 'display:block',\n      empty2: 'display:none',\n\n\n      // 相册信息修改\n      dialogFormVisible: false,\n      form: {\n        name: '',\n        title: '',\n        content: '',\n        delivery: false,\n        type: [],\n        resource: '',\n        desc: ''\n      },\n      formLabelWidth: '100px'\n    };\n  },\n  created() {\n\n  },\n\n  // 不是this.roueter!!!!!!!!!!!!!\n  mounted() {\n\n    this.currentAlbumId = this.$route.query.albumId;\n    this.currentAlbumName = this.$route.query.albumName;\n    var cookie = this.$cookie.getCookie();\n    if (cookie[0] != \"token\") {\n      this.$message({\n        message: '登录已过期!',\n        type: 'error'\n      });\n      this.$router.push({ name: 'login' });\n    }\n    else {\n      this.token = cookie[1];\n    }\n    this.selectAllImage();\n\n\n  },\n  methods: {\n\n    selectAllImage() {\n      var _this = this;\n      const formData = new FormData();\n      formData.append('token', this.token);\n      formData.append('albumId', this.currentAlbumId);\n      this.axios({\n        url: this.$serveUrL + '/album/selectAllImage',\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n          _this.images = resp.data.data.images;\n          _this.previewImageUrL = resp.data.data.previewImageUrL;\n          for (var i = 0; i < _this.previewImageUrL.length; i++) {\n            _this.previewImageUrL[i] = _this.serveUrL + _this.previewImageUrL[i]\n          }\n          _this.isRouterAlive = !_this.isRouterAlive;\n          //判断当前页面数据是否为空\n          if (_this.images.length < 1) {\n            _this.empty1 = 'display:none';\n            _this.empty2 = 'display:block';\n          }\n          else {\n            _this.empty1 = 'display:block';\n            _this.empty2 = 'display:none';\n          }\n        }\n      })\n\n    },\n    setAlbumCover() {\n      this.handleCheckIndexToId();\n      console.log(this.checkedImgId[0]);\n      if (this.checkedImgIndex.length > 1) {\n\n        this.$message({\n          message: '您只能选择一张图片作为相册封面',\n          type: 'warning'\n        });\n        return;\n      }\n      this.$confirm('是否将该图片设置为相册封面?', '设置相册封面', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n\n        var _this = this;\n        console.log(this.checkedImgId);\n        const formData = new FormData();\n        formData.append('token', this.token);\n        formData.append('albumId', this.currentAlbumId);\n        formData.append('imageId', this.checkedImgId[0]);\n        this.axios({\n          url: this.$serveUrL + \"/album/setAlbumCover\",\n          method: \"post\",\n          data: formData\n        }).then(function (resp) {\n          if (resp.data.status == \"success\") {\n            _this.$message({\n              message: '相册封面设置成功！',\n              type: 'success'\n            });\n            _this.handleCheckAllChange(false);\n            _this.selectAllImage();\n          }\n          else {\n            1;\n          }\n        })\n      })\n    },\n    removeImage() {\n      this.$confirm('此操作将移除相册集, 是否继续?', '移除相册', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.handleCheckIndexToId();\n        var _this = this;\n        console.log(this.checkedImgId);\n        const formData = new FormData();\n        formData.append('token', this.token);\n        formData.append('albumId', this.currentAlbumId);\n        formData.append('imageId', this.checkedImgId);\n        this.axios({\n          url: this.$serveUrL + \"/album/removeImageFromAlbum\",\n          method: \"post\",\n          data: formData\n        }).then(function (resp) {\n          if (resp.data.status == \"success\") {\n            _this.$message({\n              message: '图片移除成功！',\n              type: 'success'\n            });\n            _this.handleCheckAllChange(false);\n            _this.selectAllImage();\n          }\n          else {\n            1;\n          }\n        })\n      })\n    },\n    downloadImage() {\n      var imgIndex = this.checkedImgIndex;\n      var str = imgIndex[0].split(',');\n      var count = 0\n      for (let i = 0; i < str[0]; i++) {\n        for (let j = 0; j < this.images[i].image.length; j++) {\n          count++;\n        }\n      }\n      count += parseInt(str[1]);//在previewImageUrL的位置,根据选中index排序完的顺序下载\n      for (let i = 0; i < imgIndex.length; i++) {\n        str = imgIndex[i].split(',');\n        var imgUrl = this.previewImageUrL[count + i];\n        var imgName = this.images[str[0]].image[str[1]].imageName;\n        this.downloadPicture(imgUrl, imgName);\n      }\n      this.handleCheckIndexToId();\n      var _this = this;\n      const formData = new FormData();\n      formData.append('token', this.token);\n      formData.append('number', this.checkedImgId.length);\n      this.axios({\n        url: this.$serveUrL + \"/record/recordDownload\",\n        method: \"post\",\n        data: formData\n      }).then(function (resp) {\n        if (resp.data.status == \"success\") {\n          _this.$message({\n            message: '图片下载成功！',\n            type: 'success'\n          });\n          _this.dialogTableVisible = false;\n        }\n        else {\n          1;\n        }\n      })\n    },\n    downloadPicture(imgSrc, name) {\n      // 根据url下载\n      fetch(imgSrc).then((res) => {\n        res.blob().then((blob) => {\n          const url = window.URL.createObjectURL(blob)\n          const a = document.createElement('a')\n          a.href = url\n          a.download = name\n          a.click()\n          window.URL.revokeObjectURL(url)\n        })\n      })\n    },\n\n    // 其中大图预览目前总是从第一张开始,简单处理下,就是构建一个以当前图片为起始的数组\n    getSrcList(x, y) {\n      var count = 0;\n      for (var i = 0; i < x; i++) {\n        for (var j = 0; j < this.images[i].image.length; j++) {\n          count++;\n        }\n      }\n\n      return this.previewImageUrL.slice(count + y).concat(this.previewImageUrL.slice(0, count + y));\n    },\n    // 显示或隐藏顶部菜单和选中菜单\n    SwitchDisplay(checkedCount) {\n      if (checkedCount > 0) {\n        // 获取顶部菜单高度，使选中菜单保持一致\n        if (this.displayTopMenu != \"display:none;\" || this.displayTopMenu == '') {\n          this.displayCheckedMenu = 'display:block;'\n          this.displayTopMenu = 'display:none;'\n        }\n      }\n      else {\n        this.displayCheckedMenu = '';\n        this.displayTopMenu = '';\n      }\n    },\n    //部分选\n    handleCheckPartChange(x,status){\n      console.log(x,status);\n      if(status){\n        let len = this.images[x].image.length;\n        console.log(len);\n        this.checkedCount = len;\n        this.checkedImgIndex = new Array(len);\n        for(var i=0;i<len;i++){\n          this.checkedImgIndex[i] = x+','+i;\n        }\n      }\n      else {\n        this.checkedImgIndex = [];\n        this.checkedCount = 0;\n      }\n      this.isIndeterminate =false;\n      this.checkedPart = !this.checkedPart;\n      this.SwitchDisplay(this.checkedCount);\n      \n    },\n\n    //全选框\n    handleCheckAllChange(val) {\n      if (val) {\n        let len = this.images.length;\n        var count = 0;\n        for (var i = 0; i < len; i++) {\n          for (var j = 0; j < this.images[i].image.length; j++) {\n            count++;\n          }\n        }\n        this.checkedCount = count;\n\n        this.checkedImgIndex = new Array(count);\n        count = 0;\n        for (i = 0; i < len; i++) {\n          for (j = 0; j < this.images[i].image.length; j++) {\n            this.checkedImgIndex[count++] = i + ',' + j;\n          }\n        }\n      }\n      else {\n        this.checkedImgIndex = [];\n        this.checkedCount = 0;\n      }\n      this.isIndeterminate = false;\n      this.checkedStatus = val;\n      this.SwitchDisplay(this.checkedCount);\n    },\n    //根据选中的索引转化为图片的id\n    handleCheckIndexToId() {\n      let len = this.checkedImgIndex.length;\n      let array = [];\n      this.checkedImgId = new Array(len);\n      for (let i = 0; i < len; i++) {\n        let str = this.checkedImgIndex[i].split(',');\n        array.push(this.images[str[0]].image[str[1]].imageId);\n        console.log(array)\n\n      }\n      this.checkedImgId = array;\n    },\n    // 部分被选中,当勾选时，上方显示操作菜单\n    handleCheckedImgChange(value) {\n      this.checkedImgIndex.sort();\n\n      this.checkedCount = value.length;\n      this.SwitchDisplay(this.checkedCount);\n      this.checkAll = this.checkedCount === this.images.length;\n      this.isIndeterminate = this.checkedCount > 0 && this.checkedCount < this.images.length;\n    },\n\n\n\n  }\n\n}\n\n\n</script>\n\n<style scoped>\n/* 隐藏菜单 */\n#albumCheck_menu {\n  background-color: #3174ff;\n  height: 9%;\n  width: 100%;\n  display: none;\n  position: relative;\n}\n\n.check_menu_txt {\n  font-family: MiSans, MIUI, Helvetica Neue, Helvetica, Arial, PingFang SC, Microsoft Yahei, Hiragino Sans GB, Heiti SC, WenQuanYi Micro Hei, sans-serif;\n  color: #fff;\n  font-size: 1.35em;\n}\n\n.check_menu_item {\n  display: inline-block;\n  position: absolute;\n  top: 50%;\n  left: 5%;\n  transform: translate(-5%, -50%);\n}\n\n.check_menu_feature {\n  right: 5%;\n  position: absolute;\n  top: 50%;\n  transform: translate(-5%, -50%);\n}\n\n.check_menu_feature a {\n  margin-right: 2em;\n  font-size: 1.35em;\n}\n\n/* css */\n#main {\n  height: 100%;\n  width: 100%;\n  overflow-x: hidden;\n}\n\n#album_top {\n  height: 9%;\n  width: 100%;\n  position: relative;\n  text-align: center;\n}\n\n.album-icon {\n  position: relative;\n  float: left;\n  left: 1%;\n  top: 20%;\n  width: 5%;\n  height: 80%;\n  font-size: 2em;\n}\n\n#album_top span {\n  position: absolute;\n  top: 22%;\n  text-align: center;\n  line-height: 1.5;\n  font-size: 2em;\n  color: rgba(34, 28, 28, 0.65);\n  font-family: MiSans, serif;\n}\n\n\n/*--图片区域--*/\n#album-content {\n  width: 95%;\n  margin-left: 5%;\n  margin-top: 1%;\n  height: 88%;\n  overflow: scroll;\n  overflow-x: hidden;\n}\n\n#album-image-content {\n  width: 100%;\n  height: 100%;\n \n}\n\n.album-image-group {\n  margin-top:15px ;\n} \n\n.album-image-time {\n  height:45px;\n  position: relative;\n  font-size: 1.5em;\n \n  display: block;\n}\n\n/* .album-image-time:hover+.check-box {\n  display: block;\n} */\n\n.time-select{\n  display: none;\n  position: absolute;\n  top:5px;\n}\n.time-txt{\n   position: absolute; \n  top:5px;\n  left:25px;\n  display: block;\n}\n\n\n.image-item {\n  margin-right: 10px;\n  position: relative;\n  display: flex;\n  display: inline-block;\n}\n.image {\n  height: 13em;\n}\n.check-box {\n  width: 100%;\n  margin: 5px;\n  display: none;\n  position: absolute;\n}\n\n.image-item:hover .check-box {\n  display: block;\n}\n\n\n</style>\n\n\n  <style>\n#app {\n  height: 100%;\n  width: 100%;\n}\n\n.el-checkbox__inner {\n  background-color: white;\n  opacity: 0.9;\n  border: #3174ff 1px solid;\n  border-radius: 100px;\n  width: 1.4em;\n  height: 1.4em;\n}\n\n.el-checkbox__inner::after {\n  height: 0.68em;\n  left: 0.42em;\n  width: 0.29em;\n}\n\n/* 增大点击区域，提高用户体验 */\n.el-checkbox__inner::before {\n  content: '';\n  position: absolute;\n  top: -0.625em;\n  right: -2.5em;\n  bottom: -1.875em;\n  left: -0.75em;\n}\n\n\n.el-divider {\n  margin: 0;\n}\n</style>\n\n <!-- <div :style=\"empty2\">\n      <el-empty :image-size=\"200\" ></el-empty>\n    </div> -->\n    <!-- <el-button type=\"text\" @click=\"dialogFormVisible = true\" style=\"\">\n      修改相册信息\n    </el-button>\n\n    <el-dialog title=\"修改相册信息\" :visible.sync=\"dialogFormVisible\" width=\"600px\">\n      <el-form :model=\"form\">\n        <el-form-item label=\"相册名称:\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"相册标题:\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.title\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"相册简介:\" :label-width=\"formLabelWidth\">\n          <el-input v-model=\"form.content\" autocomplete=\"off\" type=\"textarea\" placeholder=\"相册简介\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"updateAlbum\">保 存</el-button>\n      </div>\n    </el-dialog> -->"]}]}